
      ! DISTANCE
      r2 = MERVIN_D0_dp MERVIN_STEP_dp * real( i, kind=dp )
      call constraint_point_define( atom_selection( atom_number = (/ MERVIN_A1 /) ) )
      call constraint_point_define( atom_selection( atom_number = (/ MERVIN_A2 /) ) )
      call constraint_define( type = "DISTANCE", &
                              fc = MERVIN_FC._dp, &
                              eq = r2 )

      ! Calculate gradient
      call gradient
      do g = 1, 1000
        if( grms < 40._dp ) cycle
        atmcrd = atmcrd - atmder / dsqrt( sum( atmder ** 2 ) ) * 0.01_dp
        call gradient
      end do

      ! Minimize Conjugate-Gradient
      call optimize_conjugate_gradient( &
        step_size = 0.01_dp, &
        step_number = 10000, &
        print_frequency = 1, &
        gradient_tolerance = 1._dp )

      ! Minimize L-BFGS-B
      call optimize_lbfgsb( &
        bracket = 2._dp, &
        step_number = 10000, &
        print_frequency = 1, &
        gradient_tolerance = 1._dp )

      ! Save optimized geometry
      call coordinates_write( "pes." // trim( si ) // "." // trim( sj ) // ".crd" )

      write( 900, "(5f20.10, 3X, I3, 3X, I3)" ) &
        MERVIN_PRINT_CONSTR1
        MERVIN_PRINT_CONSTR2
        etotal, r1, r2, i, j
      call flush( 900 )

    end do

    ! call coordinates_read( "pes." // trim( si ) // ".0.crd" )

  end do

  close(900)
  deallocate( flg )

  call dynamo_footer

end
include 'nofix.f90'
