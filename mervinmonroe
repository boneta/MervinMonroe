#!/bin/bash

#######################################################################
#######################################################################
###                                                                 ###
###                          MERVIN MONROE                          ###
###                                                                 ###
#######################################################################
#######################################################################
##               A lazy interface for fDynamo software               ##
#######################################################################

# Copyright (C) 2020, Sergio Boneta
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see https://www.gnu.org/licenses/


## CONFIGURATION:
  # Source the .mervinconfig file, preferably in the .bashrc
  # example: source /home/user/bin/mervinmonroe/.mervinconfig


## USAGE:   mervinmonroe <subprogram> [options]


##  DEFAULT VARIABLES  ################################################

  export workdir=`pwd`
  export systems_subfolder="systems"
  export scripts_subfolder="bin"
  export templates_subfolder="templates"

  export mervinmonroe_version="0.3.5 - 01062020"

##  MAIN  #############################################################
  ## Execute configuration file
    source ${mervinmonroe}/.mervinconfig

  ## Check if the $mervinmonroe variable has been set
  if [ "$mervinmonroe" == "" ]; then
    echo "ERROR: no '\$mervinmonroe' path variable set"
    exit
  fi

  ## Checks if no arguments are in the input
  if [ "$1" == "" ]; then
    echo "ERROR: No input arguments. Use -h for help."
    exit
  fi

  ## Input arguments assignment
  # queue selection
  if [ "$1" == "-q" ] || [ "$1" == "--queue" ]; then
    export queue_sge=$2
    export queue_slurm=$2
    shift; shift
  fi

  # subscript execution
  subscript="$1"
  shift
  case $subscript in
    info )                        # information
      ${mervinmonroe}/${scripts_subfolder}/info.sh $@
      ;;
    update )                      # update Mervin Monroe
      read -p "Update Mervin Monroe software? (y/n): " update_response
      if [ "$update_response" == "y" ] || [ "$update_response" == "yes" ]; then
        cd $mervinmonroe
        git fetch --all
        git reset --hard origin/master
        if [ "$?" == 0 ]; then
          echo "## Mervin Monroe updated from GitHub succesfully!"
        else
          echo "ERROR: Something went wrong while updating from GitHub."
          cd - > /dev/null 2>&1
          exit
        fi
        source .mervinconfig
        cd - > /dev/null 2>&1
      else
        echo "Update cancelled. Exiting."
        exit
      fi
      ;;
    import )                      # system importer
      ${mervinmonroe}/${scripts_subfolder}/import.sh $@
      ;;
    compile|c )                   # Dynamo compilation
      ${mervinmonroe}/${scripts_subfolder}/compile.sh $@
      ;;
    minimization|mini )           # minimization
      ${mervinmonroe}/${scripts_subfolder}/minimization.sh $@
      ;;
    pel|scan )                    # PEL calculation launcher
      ${mervinmonroe}/${scripts_subfolder}/pel.sh $@
      ;;
    pes )                         # PES calculation launcher
      ${mervinmonroe}/${scripts_subfolder}/pes.sh $@
      ;;
    locate )                      # locator of minima and TS
      ${mervinmonroe}/${scripts_subfolder}/locate.sh $@
      ;;
    irc )                         # irc
      ${mervinmonroe}/${scripts_subfolder}/irc.sh $@
      ;;
    pmf )                         # pmf
      ${mervinmonroe}/${scripts_subfolder}/pmf.sh $@
      ;;
    correction|corr )             # correction
      ${mervinmonroe}/${scripts_subfolder}/correction.sh $@
      ;;
    dynamics|dyn )                # dynamics
      ${mervinmonroe}/${scripts_subfolder}/dynamics.sh $@
      ;;
    tools|t )                     # tools
      subtool=$1
      shift
      if [ "$subtool" == "-h" ] || [ "$subtool" == "--help" ]; then
        ls ${mervinmonroe}/${scripts_subfolder}/tools/ | grep -v "ecmb.*"
        exit
      fi
      if [[ -r "${mervinmonroe}/${scripts_subfolder}/tools/$subtool" ]]; then
          ${mervinmonroe}/${scripts_subfolder}/tools/$subtool $@
      else
        echo "ERROR: Tool '$subtool' not found."
        exit
      fi
      ;;
    -h|--help )              # print help and exit
      echo "---------------  MERVIN MONROE  ---------------"
      echo "     A lazy interface for fDynamo software     "
      echo
      echo "Version $mervinmonroe_version"
      echo
      echo "USAGE:   mervinmonroe  <options>"
      echo
      echo "OPTIONS:                                     "
      echo " info                              information"
      echo " update                            update Mervin Monroe"
      echo " import                            system importer"
      echo " compile | c                       Dynamo compilation"
      echo " minimization | mini               minimization"
      echo " pel | scan                        SCAN calculation"
      echo " pes                               PES calculation"
      echo " locate                            locate minima and TS"
      echo " irc                               IRC calculation"
      echo " pmf                               PMF calculation"
      echo " correction | corr                 correction calculation"
      echo " dynamics | dyn                    molecular dynamics"
      echo " tools | t                         tools (miscellaneous)"
      echo
      echo " -q | --queue  <queue name>        set queue"
      echo " -h | --help                       print this help and exit"
      echo
      exit ;;
    *)
      echo "ERROR: Wrong option '$subscript'. Use -h for help."
      exit ;;
  esac
